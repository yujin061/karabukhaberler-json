name: Update JSON File

on:
  schedule:
    - cron: '0 */3 * * *'  # 3 saatte bir çalıştır
  workflow_dispatch:  # Manuel tetikleme seçeneği

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install axios

      - name: Create update script
        run: |
          cat > update-json.js << 'EOL'
          const axios = require("axios");
          const fs = require("fs");
          
          async function fetchAndUpdateJSON() {
            try {
              console.log("API'den veri çekiliyor...");
              // Karabük Belediyesi API'sinden veriyi çek
              const response = await axios.get("https://services.karabuk.bel.tr/jsons-karabukbeltr/data/data-haberler.json", {
                responseType: "arraybuffer"
              });
              
              // Buffer oluştur
              const buffer = Buffer.from(response.data);
              
              // UTF-16LE olarak decode et
              console.log("UTF-16LE kodlaması kullanılıyor...");
              const decoded = buffer.toString('utf16le');
              
              // Ham veriyi kaydet
              fs.writeFileSync("raw-data.txt", decoded);
              console.log("Ham veri dosyası kaydedildi: raw-data.txt");
              
              // "var data = " kısmını ve sondaki ";" işaretini temizle
              let cleanedData = decoded.replace(/^[\ufeff\ufffe]?var\s+data\s*=\s*/, "").replace(/;[\s\n\r]*$/, "");
              
              // Temizlenmiş veriyi kaydet
              fs.writeFileSync("cleaned-data.txt", cleanedData);
              console.log("Temizlenmiş veri dosyası kaydedildi: cleaned-data.txt");
              
              // Düzeltilmiş veriyi kaydet (JSON'u manuel olarak düzeltmek için)
              fs.writeFileSync("fixed-data.txt", cleanedData);
              console.log("Düzeltilmiş veri dosyası kaydedildi: fixed-data.txt");
              
              try {
                console.log("Alternatif JSON düzeltme yöntemi deneniyor...");
                
                // JavaScript'in Function yapıcısını kullanarak veriyi güvenli bir şekilde değerlendir
                const jsonStr = `
                  try {
                    const data = ${cleanedData};
                    return JSON.stringify(data);
                  } catch (e) {
                    return JSON.stringify({ error: e.message });
                  }
                `;
                
                // Function oluştur ve çalıştır
                const getJSON = new Function(jsonStr);
                const result = getJSON();
                
                // Sonucu kontrol et
                const parsedResult = JSON.parse(result);
                if (parsedResult.error) {
                  throw new Error(`Function hatası: ${parsedResult.error}`);
                }
                
                console.log("JSON başarıyla parse edildi!");
                
                // Veriyi düzgün JSON formatında kaydet
                fs.writeFileSync("data-haberler.json", result);
                console.log("JSON dosyası başarıyla güncellendi!");
                
                // Başarılı olduğunu belirtmek için bir işaret dosyası oluştur
                fs.writeFileSync("success.flag", "true");
                return true;
              } catch (parseError) {
                console.error("JSON parse hatası:", parseError);
                
                // Düzeltilmiş veriyi oluştur
                console.log("Manuel JSON düzeltme deneniyor...");
                
                try {
                  // Regex ile JSON içindeki yaygın hataları düzelt
                  let fixedData = cleanedData
                    // Virgülsüz sayıları düzelt (örn: 123 456 -> 123456)
                    .replace(/(\d+)\s+(\d+)/g, function(match, p1, p2) {
                      return p1 + p2;
                    })
                    // Hatalı ondalık sayıları düzelt (örn: 123,456 -> 123.456)
                    .replace(/(\d+),(\d+)(?!\s*["\]}])/g, '$1.$2')
                    // Çift tırnak içindeki çift tırnakları düzelt
                    .replace(/([^\\])"([^"]*)"([^:])/g, '$1\\"$2\\"$3')
                    // Eksik virgülleri düzelt (örn: {"a": 1 "b": 2} -> {"a": 1, "b": 2})
                    .replace(/(["\d])\s*}/g, '$1}')
                    .replace(/(["\d])\s*{/g, '$1,{')
                    .replace(/}\s*{/g, '},{')
                    .replace(/]\s*{/g, '],{')
                    .replace(/}\s*\[/g, '},[')
                    .replace(/(["\d])\s*\[/g, '$1,[')
                    .replace(/]\s*\[/g, '],[')
                    // Fazla virgülleri temizle
                    .replace(/,\s*[,\s]*}/g, '}')
                    .replace(/,\s*[,\s]*]/g, ']');
                  
                  // Düzeltilmiş veriyi kaydet
                  fs.writeFileSync("manual-fixed-data.txt", fixedData);
                  console.log("Manuel düzeltilmiş veri dosyası kaydedildi: manual-fixed-data.txt");
                  
                  // JSON olarak parse et
                  const jsonData = JSON.parse(fixedData);
                  console.log("Manuel düzeltme başarılı!");
                  
                  // Veriyi düzgün JSON formatında kaydet
                  fs.writeFileSync("data-haberler.json", JSON.stringify(jsonData, null, 2));
                  console.log("JSON dosyası başarıyla güncellendi!");
                  
                  fs.writeFileSync("success.flag", "true");
                  return true;
                } catch (manualError) {
                  console.error("Manuel düzeltme başarısız:", manualError);
                  
                  // Basit bir çözüm olarak, ham veriyi JavaScript koduna dönüştür ve çalıştır
                  try {
                    console.log("Son çare yöntemi deneniyor...");
                    
                    // Veriyi JavaScript dosyası olarak kaydet
                    fs.writeFileSync("data-extractor.js", `
                      ${decoded}
                      const fs = require('fs');
                      fs.writeFileSync('data-haberler.json', JSON.stringify(data, null, 2));
                      console.log('Veri başarıyla çıkarıldı!');
                    `);
                    
                    // JavaScript dosyasını çalıştır
                    require('child_process').execSync('node data-extractor.js', { stdio: 'inherit' });
                    
                    console.log("Son çare yöntemi başarılı!");
                    fs.writeFileSync("success.flag", "true");
                    return true;
                  } catch (lastResortError) {
                    console.error("Son çare yöntemi başarısız:", lastResortError);
                    throw lastResortError;
                  }
                }
              }
            } catch (error) {
              console.error("Hata oluştu:", error);
              process.exit(1);
            }
          }
          
          fetchAndUpdateJSON();
          EOL

      - name: Run update script
        run: node update-json.js

      - name: Commit and push changes if successful
        if: ${{ success() }}
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add data-haberler.json raw-data.txt cleaned-data.txt fixed-data.txt manual-fixed-data.txt success.flag data-extractor.js || true
          git diff --quiet && git diff --staged --quiet || git commit -m "JSON dosyası otomatik güncellendi: $(date +'%Y-%m-%d %H:%M:%S')"
          git push
