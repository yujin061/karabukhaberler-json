name: Update JSON File

on:
  schedule:
    - cron: '0 */3 * * *' # Her 3 saatte bir Ã§alÄ±ÅŸtÄ±rÄ±lÄ±r
  workflow_dispatch:

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install axios iconv-lite cheerio

      - name: Fetch and update JSON
        run: |
          node << 'EOF'
          const axios = require("axios");
          const fs = require("fs").promises;
          const iconv = require("iconv-lite");
          const cheerio = require("cheerio");
          const path = require("path");

          // TÃ¼rkÃ§e karakter dÃ¶nÃ¼ÅŸÃ¼mleri iÃ§in harita
          const charMap = {
            "&Ccedil;": "Ã‡", "&ccedil;": "Ã§",
            "&Ouml;": "Ã–", "&ouml;": "Ã¶",
            "&Uuml;": "Ãœ", "&uuml;": "Ã¼",
            "&rsquo;": "'", "&nbsp;": " ",
            "&ldquo;": '"', "&rdquo;": '"',
            "&ndash;": "-", "&mdash;": "-",
            "&amp;": "&", "&lsquo;": "'",
            "&hellip;": "...", "&#39;": "'",
            "&deg;": "Â°", "&aacute;": "Ã¡",
            "&eacute;": "Ã©", "&iacute;": "Ã­",
            "&oacute;": "Ã³", "&uacute;": "Ãº",
            "&ntilde;": "Ã±", "&quot;": '"'
          };

          function cleanHtml(html) {
            if (!html) return "";
            
            const $ = cheerio.load(html);
            let text = $.text();
            
            for (const [key, value] of Object.entries(charMap)) {
              text = text.replace(new RegExp(key, "g"), value);
            }
            
            return text.replace(/\s+/g, " ").trim();
          }

          function removeBom(str) {
            return str.replace(/^\uFEFF/, '');
          }

          async function saveDebugFiles(error, responseData) {
            try {
              const debugDir = path.join(process.env.GITHUB_WORKSPACE, 'debug');
              await fs.mkdir(debugDir, { recursive: true });
              
              // Ham veriyi kaydet
              await fs.writeFile(path.join(debugDir, 'error_response_raw.txt'), responseData);
              
              // FarklÄ± kodlamalarda deneyerek kaydet
              const encodings = ['utf8', 'win1254', 'latin5', 'iso-8859-9'];
              for (const enc of encodings) {
                try {
                  const decoded = iconv.decode(responseData, enc);
                  await fs.writeFile(path.join(debugDir, `error_response_${enc}.txt`), decoded);
                } catch (e) {
                  console.error(`${enc} kodlamasÄ±yla dÃ¶nÃ¼ÅŸtÃ¼rme hatasÄ±:`, e.message);
                }
              }
              
              console.log(`Hata detaylarÄ± ${debugDir} dizinine kaydedildi`);
            } catch (fileError) {
              console.error("Hata dosyalarÄ± kaydedilemedi:", fileError);
            }
          }

          (async () => {
            try {
              console.log("JSON dosyasÄ± Ã§ekiliyor...");
              const response = await axios.get("https://services.karabuk.bel.tr/jsons-karabukbeltr/data/data-haberler.json", {
                headers: {
                  "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3"
                },
                responseType: 'arraybuffer'
              });

              // Kodlama denemeleri
              const encodings = ['win1254', 'utf8', 'latin5', 'iso-8859-9'];
              let decodedData;
              let lastError;
              
              for (const enc of encodings) {
                try {
                  decodedData = removeBom(iconv.decode(response.data, enc).toString());
                  const cleanedData = decodedData
                    .replace(/^var data\s*=\s*/, '')
                    .replace(/;[\s\r\n]*$/, '')
                    .trim();
                  
                  JSON.parse(cleanedData); // Test parse
                  console.log(`BaÅŸarÄ±lÄ± kodlama: ${enc}`);
                  break;
                } catch (e) {
                  lastError = e;
                  console.log(`${enc} kodlamasÄ± baÅŸarÄ±sÄ±z:`, e.message);
                }
              }
              
              if (!decodedData) {
                throw lastError || new Error("TÃ¼m kodlama denemeleri baÅŸarÄ±sÄ±z");
              }

              // Son iÅŸlemler
              const cleanedData = decodedData
                .replace(/^var data\s*=\s*/, '')
                .replace(/;[\s\r\n]*$/, '')
                .trim();

              const jsonData = JSON.parse(cleanedData);

              const filteredNews = jsonData.haberler
                .filter(item => item.haberkisa && item.haberkisa.trim() !== "")
                .map(item => ({
                  kategoriadi: item.kategoriadi,
                  haberresim: item.haberresim,
                  haberbaslik: item.haberbaslik,
                  haberkisa: item.haberkisa,
                  tarih: item.tarih,
                  detay_url: cleanHtml(item.haberdetay)
                }));

              await fs.writeFile('data-haberler.json', JSON.stringify(filteredNews, null, 2), 'utf8');
              console.log("JSON dosyasÄ± baÅŸarÄ±yla gÃ¼ncellendi.");
            } catch (error) {
              console.error("Ä°ÅŸlem hatasÄ±:", error);
              
              if (error.response) {
                await saveDebugFiles(error, error.response.data);
              } else if (error.config) {
                console.error("Ä°stek yapÄ±landÄ±rmasÄ±:", error.config);
              }
              
              process.exit(1);
            }
          })();
          EOF

      - name: Upload debug files
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: debug-files
          path: debug/

      - name: Commit and push changes
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add data-haberler.json
          git commit -m "ðŸ”„ JSON dosyasÄ± otomatik gÃ¼ncellendi" || echo "DeÄŸiÅŸiklik yok"
          git push "https://x-access-token:${GITHUB_TOKEN}@github.com/yujin061/karabukhaberler-json.git"
