name: Update JSON File

on:
  schedule:
    - cron: '0 */3 * * *'
  workflow_dispatch:

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install axios iconv-lite

      - name: Fetch and update JSON
        run: |
          node << 'EOF'
          const axios = require("axios");
          const fs = require("fs").promises;
          const iconv = require("iconv-lite");

          (async () => {
            try {
              console.log("JSON dosyası çekiliyor...");
              const response = await axios.get("https://services.karabuk.bel.tr/jsons-karabukbeltr/data/data-haberler.json", {
                headers: {
                  "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
                  "Accept": "application/json, text/plain, */*",
                  "Referer": "https://www.karabuk.bel.tr/",
                  "Accept-Language": "tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7"
                },
                responseType: "arraybuffer",
                timeout: 10000
              });

              console.log("Yanıt alındı. Status Code:", response.status);

              // Ham veriyi UTF-8'e çevir
              let rawData = iconv.decode(response.data, "windows-1254");
              console.log("Ham veri (ilk 200 karakter):", rawData.substring(0, 200));

              // JavaScript değişken tanımını ve gereksiz karakterleri temizle
              rawData = rawData.replace(/^[\\ufeff\\ufffd\\u00ff\\u015f]*var\\s+data\\s*=\\s*/, "");
              rawData = rawData.trim();

              // Haberler dizisini bul
              const haberlerMatch = rawData.match(/\\{\"haberler\"\\s*:\\s*\\[(.*)\\]\\s*\\}/s);
              if (!haberlerMatch) {
                throw new Error("Haberler dizisi bulunamadı.");
              }

              // Temizlenmiş veriyi JSON formatında kaydet
              const cleanedData = `{"haberler": [${haberlerMatch[1]}]}`;
              await fs.writeFile('./data-haberler.json', cleanedData, 'utf8');
              console.log("data-haberler.json başarıyla güncellendi.");
            } catch (error) {
              console.error("Hata:", error.message);
            }
          })();
          EOF
