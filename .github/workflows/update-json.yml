name: Update JSON File

on:
  schedule:
    - cron: '0 */3 * * *'  # 3 saatte bir çalıştır
  workflow_dispatch:  # Manuel tetikleme seçeneği

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install axios

      - name: Create update script
        run: |
          cat > update-json.js << 'EOL'
          const axios = require("axios");
          const fs = require("fs");
          
          async function fetchAndUpdateJSON() {
            try {
              console.log("API'den veri çekiliyor...");
              // Karabük Belediyesi API'sinden veriyi çek
              const response = await axios.get("https://services.karabuk.bel.tr/jsons-karabukbeltr/data/data-haberler.json", {
                responseType: "arraybuffer"
              });
              
              // Buffer oluştur
              const buffer = Buffer.from(response.data);
              
              // İlk birkaç byte'ı kontrol et
              console.log("İlk 20 byte:", buffer.slice(0, 20).toString('hex'));
              
              // UTF-16LE olarak decode et (BOM işareti FF FE ile başlıyor)
              console.log("UTF-16LE kodlaması deneniyor...");
              const decoded = buffer.toString('utf16le');
              
              // İlk 100 karakteri göster
              console.log("İlk 100 karakter:", decoded.substring(0, 100));
              
              // "var data = " kısmını ve sondaki ";" işaretini temizle
              const cleanedData = decoded.replace(/^[\ufeff\ufffe]?var data = /, "").replace(/;$/, "");
              
              try {
                // JSON olarak parse et
                const jsonData = JSON.parse(cleanedData);
                console.log("JSON başarıyla parse edildi!");
                
                // Veriyi düzgün JSON formatında kaydet
                fs.writeFileSync("data-haberler.json", JSON.stringify(jsonData, null, 2));
                console.log("JSON dosyası başarıyla güncellendi!");
                
                // Başarılı olduğunu belirtmek için bir işaret dosyası oluştur
                fs.writeFileSync("success.flag", "true");
                return true;
              } catch (parseError) {
                console.error("JSON parse hatası:", parseError);
                
                // Ham veriyi kaydet
                fs.writeFileSync("raw-data.txt", decoded);
                console.log("Ham veri dosyası kaydedildi: raw-data.txt");
                
                // Temizlenmiş veriyi de kaydet
                fs.writeFileSync("cleaned-data.txt", cleanedData);
                console.log("Temizlenmiş veri dosyası kaydedildi: cleaned-data.txt");
                
                throw parseError;
              }
            } catch (error) {
              console.error("Hata oluştu:", error);
              process.exit(1);
            }
          }
          
          fetchAndUpdateJSON();
          EOL

      - name: Run update script
        run: node update-json.js

      - name: Commit and push changes if successful
        if: ${{ success() }}
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add data-haberler.json raw-data.txt cleaned-data.txt success.flag || true
          git diff --quiet && git diff --staged --quiet || git commit -m "JSON dosyası otomatik güncellendi: $(date +'%Y-%m-%d %H:%M:%S')"
          git push
